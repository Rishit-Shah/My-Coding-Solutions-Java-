 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null){
            return null;

        }

        // check if any of them is root,
        if(root==p || root==q){
            return root;

        }
        // now traverse left and right and check if nodes are not null then return root.
        TreeNode right= lowestCommonAncestor(root.right, p, q);

        TreeNode left= lowestCommonAncestor(root.left, p, q);

        
        if(left!=null && right!=null){
            return root;

        } 

        // now again check if any of the root is not null then return non-null root
        return (left!=null)?left : right;
        
        
    }
}
