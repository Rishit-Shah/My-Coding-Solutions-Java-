
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        if(root==null){
            return false;

        }
       if(subtrees(root,subRoot)){
        return true;
       }
        return isSubtree(root.left,subRoot) || isSubtree(root.right, subRoot); 



        
        
    }

    public boolean subtrees(TreeNode node, TreeNode node2){
        if(node==null|| node2==null){
            return node==null && node2==null;

        }

        return node.val==node2.val && subtrees(node.right, node2.right) && subtrees(node.left, node2.left);

    }
}
